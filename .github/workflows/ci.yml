name: CI
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [main]
    # TODO: #15 figure out way to only run checks on files than need rebuild
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      EXECUTABLE_NAME: ${{ steps.setup.outputs.EXECUTABLE_NAME }}
      VERSION: ${{ steps.setup.outputs.VERSION }}
      NEED_BUILD: ${{steps.filter.outputs.src == 'true' || steps.filter.outputs.deps == 'true' || steps.filter.outputs.workflows == 'true' }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/workflows/setup
        id: setup
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: "none"
          filters: |
            src:
              - 'src/**'
            deps:
              - '**/Cargo.@(toml|lock)'
            workflows:
              - '.github/workflows/**/*.yml'
            changesAdded:
              - added: 'changes/*.json'
      - shell: bash
        if: github.event_name == 'pull_request' && steps.filter.outputs.changesAdded == 'false'
        run: |
          echo "failed to find an added file in changes"
          exit 1

  build_release:
    needs: setup
    strategy:
      matrix:
        include:
          - {
              rust: stable,
              os: ubuntu-latest,
              useCross: true,
              target: x86_64-unknown-linux-musl,
              suffix: "",
            }
          - {
              rust: stable,
              os: macos-latest,
              useCross: false,
              target: x86_64-apple-darwin,
              suffix: "",
            }
          - {
              rust: stable,
              os: windows-latest,
              useCross: false,
              target: x86_64-pc-windows-msvc,
              suffix: .exe,
            }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        if: needs.setup.outputs.NEED_BUILD == 'true'
      - name: Wait on Checks
        if: needs.setup.outputs.NEED_BUILD == 'true'
        uses: lewagon/wait-on-check-action@1b1630e169116b58a4b933d5ad7effc46d3d312d
        with:
          ref: ${{ github.ref }}
          check-regexp: .?-task
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 180 # seconds
          allowed-conclusions: success,skipped

      - uses: actions-rs/toolchain@v1
        if: needs.setup.outputs.NEED_BUILD == 'true'
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-unknown-linux-musl
      - uses: Swatinem/rust-cache@v1
        if: needs.setup.outputs.NEED_BUILD == 'true'
      - uses: actions-rs/cargo@v1
        if: needs.setup.outputs.NEED_BUILD == 'true'
        with:
          use-cross: ${{ matrix.useCross }}
          command: build
          args: --release --target=${{ matrix.target }}
      - uses: actions/upload-artifact@master
        if: needs.setup.outputs.NEED_BUILD == 'true'
        with:
          name: ${{ matrix.target }}
          path: ./target/${{ matrix.target }}/release/${{ needs.setup.outputs.EXECUTABLE_NAME }}${{ matrix.suffix }}
          if-no-files-found: error
