name: Checks
on:
  push:
    paths-ignore:
      - "README.md"
      - ".changelogrc"
  # Will run once the PR is opened or a new commit is pushed against it
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - uses: fkirc/skip-duplicate-actions@master
        id: skip_check
        with:
          concurrent_skipping: "same_content"
          skip_after_successful_duplicate: "true"
          paths_ignore: '["**/README.md", "**/docs/**"]'

  clippy_check:
    name: Clippy-task
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write
    needs: [pre_job]
    if: needs.pre_job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

  check:
    name: Check-task
    runs-on: ubuntu-latest
    needs: [pre_job]
    if: needs.pre_job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test-task
    runs-on: ubuntu-latest
    needs: [pre_job]
    if: needs.pre_job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt-task
    runs-on: ubuntu-latest
    needs: [pre_job]
    if: needs.pre_job.outputs.should_skip != 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
